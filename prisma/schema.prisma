generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Project {
  id           Int     @id @default(autoincrement())
  logo         String
  name         String
  slogan       String
  site         String
  apr          Float
  tools        String
  details      String
  twitterUrl   String?
  githubUrl    String?
  linkedinUrl  String?
  instagramUrl String?
  facebookUrl  String?

  user   User @relation(fields: [userId], references: [id])
  userId Int

  votedUp ProjectsVoted[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  hidden    Boolean? @default(false)

  blockchain   BlockChain @relation(fields: [blockchainId], references: [id])
  blockchainId Int
}

model User {
  id       Int             @id @default(autoincrement())
  address  String          @unique
  projects Project[]
  votedUp  ProjectsVoted[]
}

model ProjectsVoted {
  project   Project  @relation(fields: [projectId], references: [id])
  projectId Int // relation scalar field (used in the `@relation` attribute above)
  user      User     @relation(fields: [userId], references: [id])
  userId    Int // relation scalar field (used in the `@relation` attribute above)
  date      DateTime @default(now())

  @@id([projectId, userId])
}

model BlockChain {
  id       Int       @id @default(autoincrement())
  projects Project[]
  name     String    @unique
}
